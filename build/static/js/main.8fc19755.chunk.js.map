{"version":3,"sources":["components/Layout/UserHeader.js","components/Layout/AdminHeader.js","components/Persons/Customer.js","components/Persons/Admin.js","components/Dashboard.js","actions/personActions.js","actions/types.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/UserManagement/Business.js","reducers/errorReducer.js","reducers/personReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","components/Layout/TermsAndConditions.js","components/Layout/About.js","components/Layout/Contact.js","components/Items/Catalogue.js","components/UserManagement/Welcome.js","securityUtils/SecuredRoute.js","components/Items/AddItem.js","components/Items/DeleteItem.js","components/Items/Order.js","components/Items/OrderList.js","components/Items/OrderForm.js","App.js","serviceWorker.js","index.js"],"names":["UserHeader","className","href","type","data-toggle","data-target","id","this","props","username","onClick","localStorage","clear","window","location","Component","AdminHeader","Customer","email","role","Admin","Dashboard","state","items","jwt","getItem","uid","jwtDecode","getPerson","history","user","fullName","urole","connect","errors","dispatch","a","axios","get","res","data","setItem","push","payload","setJWTToken","token","defaults","headers","common","createNewUser","newUser","post","response","Header","Business","password","confirmPassword","address_business","phone_number","abn","onChange","bind","onSubmit","e","preventDefault","alert","setState","target","name","value","placeholder","required","initialState","persons","person","validToken","booleanActionPayload","combineReducers","action","security","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","Landing","to","Register","Login","nextProps","LoginRequest","login","classnames","success","decoded","jwt_decode","TermsAndConditions","About","Contact","Catalogue","getItems","then","Container","Card","Body","Table","bordered","hover","striped","variant","length","align","colSpan","map","item","key","Image","src","imageLink","square","width","height","itemName","desc","category","colour","sex","size","pricePD","Welcome","Date","component","otherProps","render","AddItem","React","useState","setItemName","setDesc","setCategory","setPricePD","setColour","setSize","setSex","available","console","log","fetch","method","body","JSON","stringify","reload","DeleteItem","delete","itemId","Button","Order","goToOrder","pathname","OrderList","orderId","orders","getOrders","order","price","status","OrderForm","numDays","orderUsername","disabled","options","createOrder","actions","create","purchase_units","amount","onApprove","capture","details","payer","given_name","jwtToken","decoded_jwtToken","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fc19755.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link} from 'react-router-dom';\n class UserHeader extends Component {\n    //Usual Page && Navbar\n    render() {\n        return (\n            <div>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n            <div className=\"container\">\n                <a className=\"navbar-brand\" href=\"/dashboard\">\n                    E-Commerce\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n    \n                <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/dashboard\">\n                                Dashboard\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/order\">\n                                Catalogue\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/orderList\">\n                                Orders\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/about\">\n                                About\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/terms-and-conditions\">\n                                Terms and Conditions\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/contact\">\n                                Contact\n                            </a>\n                        </li>\n                    </ul>\n    \n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link \" href=\"/dashboard\">\n                                Hi {this.props.username}\n                            </a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a  className=\"nav-link\" onClick={() => {\n                                localStorage.clear();\n                                window.location.href = \"/\";\n                            }}>\n                                Logout\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n            </div>\n        )\n    }\n}\nexport default UserHeader;","import React, { Component } from 'react';\r\n\r\nclass AdminHeader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"/dashboard\">\r\n                    E-Commerce\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n    \r\n                <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/dashboard\">\r\n                                Dashboard\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/addItems\">\r\n                                Add Item\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/deleteItem\">\r\n                                Remove Items\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/catalogue\">\r\n                                Catalogue\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\">\r\n                                About\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/terms-and-conditions\">\r\n                                Terms and Conditions\r\n                            </a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/contact\">\r\n                                Contact\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n    \r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link \" href=\"/dashboard\">\r\n                                Hi {this.props.username}\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a  className=\"nav-link\" onClick={() => {\r\n                                localStorage.clear();\r\n                                window.location.href = \"/\";\r\n                            }}>\r\n                                Logout\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminHeader;","import React, { Component } from 'react'\n\nclass Customer extends Component {\n\n\n\n    render() {\n\n        //get further information\n\n        return (\n            <div className=\"container\">\n                            <div className=\"card card-body bg-light mb-3\">\n                                <div className=\"row\">\n                                    <div className=\"col-2\">\n                                        <span className=\"mx-auto\">ID: {this.props.id}</span>\n                                    </div>\n                                    <div className=\"col-lg-6 col-md-4 col-8\">\n                                        <h3>Name: {this.props.username}</h3>\n                                        <p>Email: {this.props.email}</p>\n                                        <p>Account Type: {this.props.role}</p>\n                                    </div>\n                                    {/* <div className=\"col-md-4 d-none d-lg-block\">\n                                        <ul className=\"list-group\">\n                                            <a href=\"#\">\n                                                <li className=\"list-group-item board\">\n                                                    <i className=\"fa fa-flag-checkered pr-1\">Person Profile </i>\n                                                </li>\n                                            </a>\n                                            <a href=\"#\">\n                                                <li className=\"list-group-item update\">\n                                                    <i className=\"fa fa-edit pr-1\">Update Person Info</i>\n                                                </li>\n                                            </a>\n                                            <a href=\"\">\n                                                <li className=\"list-group-item delete\">\n                                                    <i className=\"fa fa-minus-circle pr-1\">Delete Person</i>\n                                                </li>\n                                            </a>\n                                        </ul>\n                                    </div> */}\n                                </div>\n                            </div>\n                        </div>\n        )\n    }\n}\nexport default Customer;","import React, { Component } from 'react'\n\nclass Admin extends Component {\n\n\n\n    render() {\n\n        //get further information\n\n        return (\n            <div className=\"container\">\n                            <div className=\"card card-body bg-light mb-3\">\n                                <div className=\"row\">\n                                    <div className=\"col-2\">\n                                        <span className=\"mx-auto\">ID: {this.props.id}</span>\n                                    </div>\n                                    <div className=\"col-lg-6 col-md-4 col-8\">\n                                        <h3>Name: {this.props.username}</h3>\n                                        <p>Email: {this.props.email}</p>\n                                        <p>Account Type: {this.props.role}</p>\n                                    </div>\n                                    {/* <div className=\"col-md-4 d-none d-lg-block\">\n                                        <ul className=\"list-group\">\n                                            <a href=\"#\">\n                                                <li className=\"list-group-item board\">\n                                                    <i className=\"fa fa-flag-checkered pr-1\">Person Profile </i>\n                                                </li>\n                                            </a>\n                                            <a href=\"#\">\n                                                <li className=\"list-group-item update\">\n                                                    <i className=\"fa fa-edit pr-1\">Update Person Info</i>\n                                                </li>\n                                            </a>\n                                            <a href=\"\">\n                                                <li className=\"list-group-item delete\">\n                                                    <i className=\"fa fa-minus-circle pr-1\">Delete Person</i>\n                                                </li>\n                                            </a>\n                                        </ul>\n                                    </div> */}\n                                </div>\n                            </div>\n                        </div>\n        )\n    }\n}\nexport default Admin;","import React, { Component, useEffect } from 'react'\nimport { getPerson } from '../actions/personActions';\nimport * as PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport jwtDecode from 'jwt-decode';\n\nimport UserHeader from './Layout/UserHeader';\nimport AdminHeader from './Layout/AdminHeader';\nimport Customer from './Persons/Customer';\nimport Admin from './Persons/Admin';\n\n\n\n\nclass Dashboard extends Component {\n\n    state = {\n        items: []\n    }\n\n    componentDidMount(){\n        //Get More Details of a user\n        const jwt = localStorage.getItem(\"jwtToken\");\n        const user = jwtDecode(jwt);\n        const uid = user.id;\n        this.props.getPerson(uid, this.props.history);\n    } \n    \n    \n\n    render() {\n\n        if(!localStorage.getItem(\"jwtToken\")) {\n            //Simply take out from the page\n            window.location.href = \"/\";\n        }\n    \n        //Logic to get the current user from the jwt token\n        const jwt = localStorage.getItem(\"jwtToken\");\n        const user = jwtDecode(jwt);\n        const username = user.fullName;\n        const id = user.id;\n        const email = user.username;\n\n        //Checks the role of the user and gives him the necessary actions to do \n        const actions = () => {\n            if(localStorage.urole == \"Customer\") {\n                return <></>;\n            }\n            if(localStorage.urole == \"Admin\") {\n                return <></>;\n            }\n        }\n\n        //Renders header based on role\n        const headerRender = () => {\n            if (localStorage.urole == \"Customer\") {\n                return <UserHeader username={username}/>\n            }\n\n            if (localStorage.urole == \"Admin\") {\n                return <AdminHeader username={username}/>\n            }\n        }\n\n        //Display User Profile based on type\n        const detectUser = () => {\n            if(localStorage.urole == \"Customer\") {\n                return <Customer username={username} id={id} email={email} role={localStorage.urole}/>;\n          \n            }\n            if(localStorage.urole == \"Admin\") {\n                return <Admin username={username} id={id} email={email} role={localStorage.urole}/>;\n          \n            }\n        }\n        \n        return (\n            <>\n            {headerRender()}\n            <div className=\"Persons\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                       {actions()}\n                       {detectUser()}\n                        <br />\n                        <hr />\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n        </>\n        )\n    }\n}\n\nDashboard.propTypes = {\n    getPerson: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n  \nconst mapStateToProps = state => ({\nerrors: state.errors\n});\n  \nexport default connect(\n    mapStateToProps,\n    { getPerson }\n)(Dashboard);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PERSONS, GET_PERSON } from \"./types\";\n\n//Register Information \n// export const createPerson = (person, history) => async dispatch => {\n//   try {\n//     const res = await axios.post(\"http://localhost:8080/api/person\", person);\n\n//     history.push(\"/dashboard\");\n//   } catch (err) {\n//     dispatch({\n//       type: GET_ERRORS,\n//       payload: err.response.data\n//     });\n//   }\n// };\n\n//Get All Information \n// export const getPersons = () => async dispatch => {\n//   const res = await axios.get(\"/api/person/all\");\n//   dispatch({\n//     type: GET_PERSONS,\n//     payload: res.data\n//   });\n// };\n\n//Get the User Information \nexport const getPerson = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`http://cloudcomputinga1loginmicroservice-env.eba-p8kd6tvw.us-east-1.elasticbeanstalk.com/api/users/getUsers/${id}`);\n\n    //Getting the user information  \n    const { role } = res.data;\n    localStorage.setItem(\"urole\", role);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_PERSON,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\n//Add Items\nexport const createNewItem = (newItem, history) => async dispatch => {\n  try {\n    \n    await axios.post(`http://cloudcomputinga1itemmicroservice-env.eba-btrpvvm3.us-east-1.elasticbeanstalk.com/api/items/addItem`, newItem);\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n\n\n    console.log(err);\n  }\n};\n\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PERSONS = \"GET_PERSONS\";\nexport const GET_PERSON = \"GET_PERSON\";\n\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n\n    try{\n\n        await axios.post(`http://cloudcomputinga1loginmicroservice-env.eba-p8kd6tvw.us-east-1.elasticbeanstalk.com/api/users/register`, newUser);\n        //Variables that get captured\n        const { username } = newUser; //username\n        const { fullName } = newUser; //fullName\n        const { role } = newUser; //role\n        //set to local storage\n        localStorage.setItem(\"username\", username);\n        localStorage.setItem(\"fullName\", fullName);\n        localStorage.setItem(\"role\", role);\n        history.push(\"/welcome\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    }\n    catch (err){\n        dispatch ({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n      // post => Login Request\n      const res = await axios.post(`http://cloudcomputinga1loginmicroservice-env.eba-p8kd6tvw.us-east-1.elasticbeanstalk.com/api/users/login`, LoginRequest);\n      // extract token from res.data\n      const { token } = res.data;\n      //extract data\n      const { success } = res.data;\n      // store the token in the localStorage\n      localStorage.setItem(\"jwtToken\", token);\n      // set our token in header ***\n      setJWTToken(token);\n      // decode token on React\n      const decoded = jwt_decode(token);\n      // dispatch to our securityReducer\n      dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n  \n  export const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.clear(); //removes all the item \n    setJWTToken(false);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: {}\n    });\n  };\n  ","import React, { Component } from 'react'\n\n class Header extends Component {\n    //Usual Page && Navbar\n    render() {\n        return (\n            <div>\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n            <div className=\"container\">\n                <a className=\"navbar-brand\" href=\"/\">\n                    E-Commerce\n                </a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n    \n                <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/dashboard\">\n                                Dashboard\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/about\">\n                                About\n                            </a>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/terms-and-conditions\">\n                                Terms and Conditions\n                            </a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/contact\">\n                                Contact\n                            </a>\n                        </li>\n                    </ul>\n    \n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link \" href=\"/register\">\n                                Sign Up\n                            </a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/login\">\n                                Login\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n            </div>\n        )\n    }\n}\nexport default Header;","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport Header from \"../Layout/Header\";\nimport * as PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Business extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      role: \"\",\n      address_business: \"\",\n      phone_number: \"\",\n      abn: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  \n\n  //On Submit Logic\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      address_business: this.state.address_business,\n      phone_number: this.state.phone_number,\n      abn: this.state.abn,\n      role: \"Publisher\"\n    };\n\n    //Checkes whether the password is matches or not\n\n    const passwordCheck = {password: this.state.password, verifyPassword: this.state.confirmPassword};\n\n    if (passwordCheck.password !== passwordCheck.verifyPassword) {\n      alert(\"Passwords don't match!\");\n      \n    } else {\n\n      this.props.createNewUser(newUser, this.props.history); //Go for submission\n\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    return (\n      <>\n      <Header/>\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Business Account</p>\n              <p className=\"lead text-center\">Are you a customer? Then you can open an account from <a href='/register'>Customer Application page</a>.</p>\n              \n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Publishing House\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Business Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    id=\"password\"\n                    required\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    id=\"confirmPassword\"\n                    required\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Business Address\"\n                    name=\"address_business\"\n                    id=\"address_business\"\n                    required\n                    value={this.state.address_business}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Phone Number\"\n                    name=\"phone_number\"\n                    id=\"phone_number\"\n                    required\n                    value={this.state.phone_number}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"ABN Number\"\n                    name=\"abn\"\n                    id=\"abn\"\n                    required\n                    value={this.state.abn}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <p>By Signing up, you are agreeing with our terms and conditions by default.</p>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nBusiness.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Business);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PERSONS, GET_PERSON} from \"../actions/types\";\n\nconst initialState = {\n  persons: [],\n  person: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PERSONS:\n      return {\n        ...state,\n        persons: action.payload\n      };\n\n    case GET_PERSON:\n      return {\n        ...state,\n        person: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport personReducer from \"./personReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  person: personReducer,\n  security: securityReducer\n});\n\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport Header from './Header';\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <>\n      <Header/>\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  E-Commerce\n                </h1>\n                <p className=\"lead\">\n                  Rent Clothes and Do Stuff!\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport Header from \"../Layout/Header\";\nimport * as PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      role: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  \n\n  //On Submit Logic\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      role: \"Customer\"\n    };\n\n    //Checkes whether the password is matches or not\n\n    const passwordCheck = {password: this.state.password, verifyPassword: this.state.confirmPassword};\n\n    if (passwordCheck.password !== passwordCheck.verifyPassword) {\n      alert(\"Passwords don't match!\");\n      \n    } else {\n\n      this.props.createNewUser(newUser, this.props.history); //Go for submission\n\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    return (\n      <>\n      <Header/>\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create a new account</p>\n              \n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    id=\"password\"\n                    required\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    id=\"confirmPassword\"\n                    required\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <p>By Signing up, you are agreeing with our terms and conditions by default.</p>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport Header from \"../Layout/Header\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  \n  //If there is a valid token already existing\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n    \n    //Login Request\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <>\n      <Header/>\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);","import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport UserHeader from './UserHeader';\r\nimport AdminHeader from './AdminHeader';\r\nimport Header from './Header';\r\n\r\nclass TermsAndConditions extends Component {\r\n    render() {\r\n        if(!localStorage.getItem(\"jwtToken\")) {\r\n            return (\r\n                <>\r\n                <Header/>\r\n                <div className=\"landing\">\r\n                    <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">\r\n                            E-Commerce\r\n                            </h1>\r\n                            <p className=\"lead\">\r\n                            Please read our rules before joining us!\r\n                            </p>\r\n                            {/*  */}\r\n                            <p>#1 Be Nice!</p>\r\n                            <p>#2 Follow the rule above!</p>\r\n                            <p>#4 Violation of above rules will result in a permanent ban!</p>\r\n                            {/*  */}\r\n                            <hr />\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n    \r\n        //Logic to get the current user from the jwt token\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n\r\n        //Checks the role of the user and gives him the necessary actions to do \r\n        const actions = () => {\r\n            if(localStorage.urole == \"Customer\") {\r\n                return <></>;\r\n            }\r\n            if(localStorage.urole == \"Admin\") {\r\n                return <></>;\r\n            }\r\n        }\r\n\r\n        //Renders header based on role\r\n        const headerRender = () => {\r\n            if (localStorage.urole == \"Customer\") {\r\n                return <UserHeader username={username}/>\r\n            }\r\n\r\n            if (localStorage.urole == \"Admin\") {\r\n                return <AdminHeader username={username}/>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n            {headerRender()}\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">\r\n                        E-Commerce\r\n                        </h1>\r\n                        <p className=\"lead\">\r\n                        Please read our rules before joining us!\r\n                        </p>\r\n                        {/*  */}\r\n                        <p>#1 Be Nice!</p>\r\n                        <p>#2 Follow the rule above!</p>\r\n                        <p>#4 Violation of above rules will result in a permanent ban!</p>\r\n                        {/*  */}\r\n                        <hr />\r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TermsAndConditions;","import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport UserHeader from './UserHeader';\r\nimport AdminHeader from './AdminHeader';\r\nimport Header from './Header';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        if(!localStorage.getItem(\"jwtToken\")) {\r\n            return (\r\n                <>\r\n                <Header/>\r\n                <div className=\"landing\">\r\n                    <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">\r\n                            E-Commerce\r\n                            </h1>\r\n                            <p className=\"lead\">\r\n                            About us!\r\n                            </p>\r\n                            {/*  */}\r\n                            <p>We rent clothes</p>\r\n                            <p>That look amazing</p>\r\n                            <p>So that don't need to keep buying expensive ones</p>      \r\n                            {/*  */}\r\n                            <hr />\r\n                            \r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n    \r\n        //Logic to get the current user from the jwt token\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n\r\n        //Checks the role of the user and gives him the necessary actions to do \r\n        const actions = () => {\r\n            if(localStorage.urole == \"Customer\") {\r\n                return <></>;\r\n            }\r\n            if(localStorage.urole == \"Admin\") {\r\n                return <></>;\r\n            }\r\n        }\r\n\r\n        //Renders header based on role\r\n        const headerRender = () => {\r\n            if (localStorage.urole == \"Customer\") {\r\n                return <UserHeader username={username}/>\r\n            }\r\n\r\n            if (localStorage.urole == \"Admin\") {\r\n                return <AdminHeader username={username}/>\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n            {headerRender()}\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">\r\n                        E-Commerce\r\n                        </h1>\r\n                        <p className=\"lead\">\r\n                        About us!\r\n                        </p>\r\n                        {/*  */}\r\n                        <p>We rent clothes</p>\r\n                        <p>That look amazing</p>\r\n                        <p>So that don't need to keep buying expensive ones</p>      \r\n                        {/*  */}\r\n                        <hr />\r\n                        \r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport UserHeader from './UserHeader';\r\nimport AdminHeader from './AdminHeader';\r\nimport Header from './Header';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        if(!localStorage.getItem(\"jwtToken\")) {\r\n            return (\r\n                <>\r\n                <Header/>\r\n                <div className=\"landing\">\r\n                    <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">\r\n                            E-Commerce\r\n                            </h1>\r\n                            <p className=\"lead\">\r\n                            Contact us?\r\n                            </p>\r\n                            {/*  */}\r\n                            <p>Email: E-Commerce@site.com.au</p>\r\n                            <p>Please include your order number and full name</p>\r\n                            {/*  */}\r\n                            <hr />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n    \r\n        //Logic to get the current user from the jwt token\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n\r\n        //Checks the role of the user and gives him the necessary actions to do \r\n        const actions = () => {\r\n            if(localStorage.urole == \"Customer\") {\r\n                return <></>;\r\n            }\r\n            if(localStorage.urole == \"Admin\") {\r\n                return <></>;\r\n            }\r\n        }\r\n\r\n        //Renders header based on role\r\n        const headerRender = () => {\r\n            if (localStorage.urole == \"Customer\") {\r\n                return <UserHeader username={username}/>\r\n            }\r\n\r\n            if (localStorage.urole == \"Admin\") {\r\n                return <AdminHeader username={username}/>\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                {headerRender()}\r\n                <div className=\"landing\">\r\n                    <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">\r\n                            E-Commerce\r\n                            </h1>\r\n                            <p className=\"lead\">\r\n                            Contact us?\r\n                            </p>\r\n                            {/*  */}\r\n                            <p>Email: E-Commerce@site.com.au</p>\r\n                            <p>Please include your order number and full name</p>\r\n                            {/*  */}\r\n                            <hr />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport AdminHeader from '../Layout/AdminHeader';\r\nimport { Container, Row, Card, Table, Image, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass Catalogue extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items : []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    }\r\n\r\n    getItems() {\r\n        axios.get(`http://cloudcomputinga1itemmicroservice-env.eba-btrpvvm3.us-east-1.elasticbeanstalk.com/api/items/findItems`)\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({items:data})\r\n            });\r\n    }\r\n    \r\n\r\n    render() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n        const role = user.role;\r\n        return (\r\n            <>\r\n            <AdminHeader username={username}/>\r\n            <Container>\r\n            <Card className={\"border border-dark bg-light text-black\"}>\r\n                <h5 className=\"display-4 text-center\">Catalogue</h5>             \r\n                <Card.Body>\r\n                    <Table bordered hover striped variant='light'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Item Name</th>\r\n                                <th>Item Description</th>\r\n                                <th>Category</th>\r\n                                <th>Colour</th>\r\n                                <th>Sex</th>\r\n                                <th>Size</th>\r\n                                <th>Price Per Day</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.items.length === 0 ?\r\n                                <tr align=\"center\">\r\n                                    <td colSpan=\"7\">No items in catalogue</td>\r\n                                </tr> :\r\n                                this.state.items.map((item) => (\r\n                                    <tr key={item.id}>\r\n                                        <td>\r\n                                            <Image src={item.imageLink} square width=\"100\" height=\"100\"/>\r\n                                        </td>\r\n                                        <td>{item.itemName}</td>\r\n                                        <td>{item.desc}</td>\r\n                                        <td>{item.category}</td>\r\n                                        <td>{item.colour}</td>\r\n                                        <td>{item.sex}</td>\r\n                                        <td>{item.size}</td>\r\n                                        <td>{item.pricePD}</td>\r\n                                    </tr>\r\n                                ))\r\n                            } \r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Catalogue;","import React, { Component } from \"react\";\nimport Header from \"../Layout/Header\";\n\nclass Welcome extends Component {\n    \n    render() {\n\n\n        //Get Newly Registered User Information\n        const username = localStorage.getItem(\"username\"); //username\n        const fullName = localStorage.getItem(\"fullName\"); //fullName\n        const d = new Date();\n        const role = localStorage.getItem(\"role\"); //role of that user\n        if(!username) {\n            window.location.href = \"/login\"\n        }\n\n        \n\n        return (\n            <>\n            <Header/>\n            <div className=\"welcome\">\n                <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                <h1 className=\"display-4 text-center\">Welcome :)</h1><br/>\n                <div className=\"card\" >\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Hello!!</h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Welcome</h6>\n                    <p className=\"card-text\">Hello {fullName}. Thank you for opening an account on E-Commerce! This is just a welcome page to greet you. You can view our terms and condition. However you still have to login to gain access.</p>\n                    <p className=\"card-text\">This is just a welcome page to greet you. You can view our terms and condition. However you still have to login to gain access.</p>\n                    <p>What is next?</p>\n                    <p className=\"card-text\">Since you are a <strong>customer</strong>, you just have to add more details to start doing stuff.</p>\n                    <a href=\"#terms-and-conditions\" className=\"card-link\">View Terms and Conditions</a>\n                    <a href=\"/login\"  className=\"card-link\">Login Page</a>\n                </div>\n                </div>\n                    </div>\n                    </div>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default Welcome;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component, useRef } from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\nimport AdminHeader from '../Layout/AdminHeader';\r\n\r\nexport default function AddItem() {\r\n\r\n    const[itemName, setItemName] = React.useState('');\r\n    const[desc, setDesc] = React.useState('');\r\n    const[category, setCategory] = React.useState('');\r\n    const[pricePD, setPricePD] = React.useState('');\r\n    const[colour, setColour] = React.useState('');\r\n    const[size, setSize] = React.useState('');\r\n    const[sex, setSex] = React.useState('');\r\n    const[available] = React.useState('Yes');\r\n    const[imageLink] = React.useState('https://images.unsplash.com/photo-1578932750294-f5075e85f44a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8Y2xvdGhlcyUyMHNob3B8ZW58MHx8MHx8&w=1000&q=80');\r\n\r\n\r\n    function refreshPage() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const onSubmit=(e)=>{\r\n        e.preventDefault()\r\n        const item={itemName, desc, category, pricePD, colour, size, sex, available, imageLink}\r\n        console.log(item)\r\n        fetch(`http://cloudcomputinga1itemmicroservice-env.eba-btrpvvm3.us-east-1.elasticbeanstalk.com/api/items/addItem`, {\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(item)\r\n\r\n        }).then(()=>{\r\n            refreshPage()\r\n            alert(\"New Item Added\")\r\n            console.log(\"New Item Added\")\r\n        })\r\n    };\r\n\r\n\r\n    //To verify the existing username\r\n    const jwt = localStorage.getItem(\"jwtToken\");\r\n    const user = jwtDecode(jwt);\r\n    const username = user.fullName;\r\n    return (\r\n        <>\r\n        <AdminHeader username={username}/>\r\n        <div className=\"Item\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Add Item</h5>\r\n                    <hr />\r\n                    <form onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg \" \r\n                                placeholder=\"Item Name\" \r\n                                name=\"itemName\"\r\n                                value= {itemName}\r\n                                onChange = {(e)=>setItemName(e.target.value)}\r\n                                required\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                placeholder=\"Item Description\"\r\n                                name=\"desc\"\r\n                                value= {desc}\r\n                                onChange = {(e)=>setDesc(e.target.value)}\r\n                                required\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                placeholder=\"Category\"\r\n                                name=\"category\"\r\n                                value= {category}\r\n                                onChange = {(e)=>setCategory(e.target.value)}\r\n                                required\r\n                                    /><br></br>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                placeholder=\"Price Per Day ($)\"\r\n                                name=\"pricePD\"\r\n                                value= {pricePD}\r\n                                onChange = {(e)=>setPricePD(e.target.value)}\r\n                                required\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <select className=\"form-control form-control-lg\" value={size} onChange = {(e)=>setSize(e.target.value)} \r\n                                required placeholder='Select Size'>\r\n                                    <option value={\"\"}>Select Size</option>\r\n                                    <option value=\"Extra Small\">Extra Small</option>\r\n                                    <option value=\"Small\">Small</option>\r\n                                    <option value=\"Medium\">Medium</option>\r\n                                    <option value=\"Extra Medium\">EXTRA MEDIUM</option>\r\n                                    <option value=\"Large\">Large</option>\r\n                                    <option value=\"Extra Large\">Extra Large</option>\r\n                                </select>\r\n                            </div><br></br>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                placeholder=\"Colour\"\r\n                                name=\"colour\"\r\n                                value= {colour}\r\n                                onChange = {(e)=>setColour(e.target.value)}\r\n                                required\r\n                                    />\r\n                            </div><br></br>\r\n                            <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" value={sex} onChange = {(e)=>setSex(e.target.value)} \r\n                                required placeholder='Select Sex'>\r\n                                    <option value={\"\"}>Select Sex</option>\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Uni-Sex\">Uni-Sex</option>\r\n                                </select>\r\n                            </div><br></br>\r\n                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\"/>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport AdminHeader from '../Layout/AdminHeader';\r\nimport { Container, Row, Card, Table, Image, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass DeleteItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items : []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    };\r\n\r\n    getItems() {\r\n        axios.get(`http://cloudcomputinga1itemmicroservice-env.eba-btrpvvm3.us-east-1.elasticbeanstalk.com/api/items/findItems`)\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({items:data})\r\n            });\r\n    };\r\n\r\n    delete = (itemId) => {\r\n        axios.delete(`http://cloudcomputinga1itemmicroservice-env.eba-btrpvvm3.us-east-1.elasticbeanstalk.com/api/items/deleteByID/`+itemId)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    alert(\"Item Removed\")\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n        return (\r\n            <>\r\n            <AdminHeader username={username}/>\r\n            <Container>\r\n            <Card className={\"border border-dark bg-light text-black\"}>\r\n                <h5 className=\"display-4 text-center\">Catalogue</h5>             \r\n                <Card.Body>\r\n                    <Table bordered hover striped variant='light'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Item Name</th>\r\n                                <th>Item Description</th>\r\n                                <th>Category</th>\r\n                                <th>Colour</th>\r\n                                <th>Sex</th>\r\n                                <th>Size</th>\r\n                                <th>Price Per Day</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.items.length === 0 ?\r\n                                <tr align=\"center\">\r\n                                    <td colSpan=\"7\">No items in catalogue</td>\r\n                                </tr> :\r\n                                this.state.items.map((item) => (\r\n                                    <tr key={item.id}>\r\n                                        <td>\r\n                                            <Image src={item.imageLink} square width=\"100\" height=\"100\"/>\r\n                                        </td>\r\n                                        <td>{item.itemName}</td>\r\n                                        <td>{item.desc}</td>\r\n                                        <td>{item.category}</td>\r\n                                        <td>{item.colour}</td>\r\n                                        <td>{item.sex}</td>\r\n                                        <td>{item.size}</td>\r\n                                        <td>{item.pricePD}</td>\r\n                                        <td>\r\n                                            <Button variant='danger' onClick={this.delete.bind(this, item.id)}>Delete</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            } \r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteItem;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport UserHeader from '../Layout/UserHeader';\r\nimport { Container, Row, Card, Table, Image, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass Order extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items : []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getItems();\r\n    };\r\n\r\n    getUser() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n    }\r\n\r\n    getItems() {\r\n        axios.get(`http://cloudcomputinga1itemmicroservice-env.eba-btrpvvm3.us-east-1.elasticbeanstalk.com/api/items/findItems`)\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({items:data})\r\n            });\r\n    };\r\n\r\n    goToOrder = (itemName, pricePD, username) => {\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n        const email = user.username;\r\n        return (\r\n            <>\r\n            <UserHeader username={username}/>\r\n            <Container>\r\n            <Card className={\"border border-dark bg-light text-black\"}>\r\n                <h5 className=\"display-4 text-center\">Catalogue</h5>             \r\n                <Card.Body>\r\n                    <Table bordered hover striped variant='light'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Item Name</th>\r\n                                <th>Item Description</th>\r\n                                <th>Category</th>\r\n                                <th>Colour</th>\r\n                                <th>Sex</th>\r\n                                <th>Size</th>\r\n                                <th>Price Per Day</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.items.length === 0 ?\r\n                                <tr align=\"center\">\r\n                                    <td colSpan=\"7\">No items in catalogue</td>\r\n                                </tr> :\r\n                                this.state.items.map((item) => (\r\n                                    <tr key={item.id}>\r\n                                        <td>\r\n                                            <Image src={item.imageLink} square width=\"100\" height=\"100\"/>\r\n                                        </td>\r\n                                        <td>{item.itemName}</td>\r\n                                        <td>{item.desc}</td>\r\n                                        <td>{item.category}</td>\r\n                                        <td>{item.colour}</td>\r\n                                        <td>{item.sex}</td>\r\n                                        <td>{item.size}</td>\r\n                                        <td>{item.pricePD}</td>\r\n                                        <td>\r\n                                            {/* <Button variant='success' onClick={this.goToOrder.bind(\r\n                                                this, item.itemName, item.pricePD, email)}>Order</Button> */}\r\n                                            <Link to={{\r\n                                                    pathname: '/orderForm',\r\n                                                    state: {itemName: item.itemName, pricePD: item.pricePD, user: email}\r\n                                                    }} className=\"btn btn-success\">Order</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            } \r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport UserHeader from '../Layout/UserHeader';\r\nimport { Container, Row, Card, Table, Image, ButtonGroup, Button } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nclass OrderList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            orders : []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrders();\r\n    }\r\n\r\n    getOrders() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.username;\r\n        axios.get(`http://cloudcomputinga1ordermicroservice-env.eba-dkisjigt.us-east-1.elasticbeanstalk.com/api/orders/findOrderByUsername/`+username)\r\n            .then(response => response.data)\r\n            .then((data) => {\r\n                this.setState({orders:data})\r\n            });\r\n    }\r\n\r\n    delete = (orderId) => {\r\n        axios.delete(`http://cloudcomputinga1ordermicroservice-env.eba-dkisjigt.us-east-1.elasticbeanstalk.com/api/orders/deleteById/`+orderId)\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    alert(\"Order Removed\")\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n    };\r\n    \r\n\r\n    render() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n        const email = user.username;\r\n        return (\r\n            <>\r\n            <UserHeader username={username}/>\r\n            <Container>\r\n            <Card className={\"border border-dark bg-light text-black\"}>\r\n            <h5 className=\"display-4 text-center\">Orders</h5>             \r\n                <Card.Body>\r\n                    <Table bordered hover striped variant='light'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Item Name</th>\r\n                                <th>Username</th>\r\n                                <th>Price</th>\r\n                                <th>Status</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.orders.length === 0 ?\r\n                                <tr align=\"center\">\r\n                                    <td colSpan=\"5\">No orders</td>\r\n                                </tr> :\r\n                                this.state.orders.map((order) => (\r\n                                    <tr key={order.id}>\r\n                                        <td></td>\r\n                                        <td>{order.itemName}</td>\r\n                                        <td>{order.username}</td>\r\n                                        <td>{order.price}</td>\r\n                                        <td>{order.status}</td>\r\n                                        <td>\r\n                                            <Button variant='danger' onClick={this.delete.bind(this, order.id)}>Cancel</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            } \r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderList;","import React, { Component } from 'react';\r\nimport UserHeader from '../Layout/UserHeader';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\nclass OrderForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            itemName: this.props.location.state.itemName,\r\n            orderUsername: this.props.location.state.username,\r\n            pricePD: this.props.location.state.pricePD,\r\n            price: '',\r\n            numDays: ''\r\n        }\r\n    }\r\n\r\n    consoleLog() {\r\n        console.log(this.props.location.state);\r\n    }\r\n\r\n\r\n    onSubmit=()=>{\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const email = user.username;\r\n        const order={itemName: this.state.itemName, \r\n            username: email,\r\n            price: this.state.pricePD * this.state.numDays, \r\n            numDays: this.state.numDays,\r\n            status: \"Pending\"}\r\n        console.log(order)\r\n        fetch(`http://cloudcomputinga1ordermicroservice-env.eba-dkisjigt.us-east-1.elasticbeanstalk.com/api/orders/addOrder`, {\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify(order)\r\n\r\n        }).then(()=>{\r\n            console.log(\"New Item Added\")\r\n            window.location.href = '/orderList'\r\n        })\r\n    };\r\n\r\n    onChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const jwt = localStorage.getItem(\"jwtToken\");\r\n        const user = jwtDecode(jwt);\r\n        const username = user.fullName;\r\n        const email = user.username;\r\n\r\n        return (\r\n            <>\r\n            <UserHeader username={email}/>\r\n            <h5 className=\"display-4 text-center\">{this.props.location.state.itemName}</h5>\r\n            <div className=\"Item\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg \" \r\n                                placeholder={this.state.itemName} \r\n                                name=\"itemName\"\r\n                                value= {this.state.itemName}\r\n                                disabled\r\n                                required\r\n                                />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                placeholder={this.state.orderUsername}\r\n                                name=\"username\"\r\n                                value= {this.state.orderUsername = email}\r\n                                disabled\r\n                                required\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className=\"form-control form-control-lg\" \r\n                                placeholder=\"Number of Days You Wish to Rent\"\r\n                                name=\"numDays\"\r\n                                value= {this.state.numDays}\r\n                                onChange = {this.onChange}\r\n                                required\r\n                            />\r\n                            </div><br></br>\r\n                            <PayPalScriptProvider options={{ \"client-id\": \"test\" }}>\r\n                            <PayPalButtons\r\n                                createOrder={(data, actions) => {\r\n                                    return actions.order.create({\r\n                                        purchase_units: [\r\n                                            {\r\n                                                amount: {\r\n                                                    value: this.state.pricePD * this.state.numDays,\r\n                                                },\r\n                                            },\r\n                                        ],\r\n                                    });\r\n                                }}\r\n                                onApprove={(data, actions) => {\r\n                                    return actions.order.capture().then((details) => {\r\n                                        const name = details.payer.name.given_name;\r\n                                        this.onSubmit();\r\n                                    });\r\n                                }}\r\n                            />\r\n                            </PayPalScriptProvider>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderForm;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Business from \"./components/UserManagement/Business\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport TermsAndConditions from \"./components/Layout/TermsAndConditions\";\nimport About from \"./components/Layout/About\";\nimport Contact from \"./components/Layout/Contact\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport Catalogue from \"./components/Items/Catalogue\";\nimport Welcome from \"./components/UserManagement/Welcome\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\nimport AddItem from \"./components/Items/AddItem\";\nimport DeleteItem from \"./components/Items/DeleteItem\";\nimport Order from \"./components/Items/Order\"\nimport OrderList from \"./components/Items/OrderList\";\nimport OrderForm from \"./components/Items/OrderForm\";\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  // Commented because it was causing the most problem\n  // const currentTime = Date.now() / 1000;\n  // if (decoded_jwtToken.exp < currentTime) {\n  //   store.dispatch(logout());\n  //   window.location.href = \"/\";\n  // }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            \n            {\n              //Public Routes\n            }\n           \n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/welcome\" component={Welcome} />\n            <Route exact path=\"/terms-and-conditions\" component={TermsAndConditions}/>\n            <Route exact path=\"/about\" component={About}/>\n            <Route exact path=\"/contact\" component={Contact}/>\n            {\n              //Private Routes\n            }\n\n            <Route exact path=\"/addItems\" component={AddItem} />\n            <Route exact path=\"/catalogue\" component={Catalogue}/>\n            <Route exact path=\"/deleteItem\" component={DeleteItem}/>\n            <Route exact path=\"/order\" component={Order}/>\n            <Route exact path=\"/orderList\" component={OrderList}/>\n            <Route exact path=\"/orderForm\" component={OrderForm}/>\n            <SecuredRoute \n              exact\n              path=\"/dashboard\"\n              component={Dashboard}\n            />\n          \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}